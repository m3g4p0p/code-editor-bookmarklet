(()=>{"use strict";const e="https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.21.2/min",t=document.getElementById("language"),n=document.getElementById("theme"),o=document.getElementById("insert"),a=document.getElementById("close"),d=new URLSearchParams(window.location.search),r=decodeURIComponent(d.get("text")||""),i=d.get("origin")||"*",c=d.get("theme");function s(e){window.parent.postMessage(e,i)}a.addEventListener("click",(()=>{s({type:"editor.close"})})),document.body.addEventListener("click",(e=>{e.target===e.currentTarget&&a.click()})),async function(){var t,n;return await(t=`${e}/vs/loader.min.js`,new Promise(((e,n)=>{const o=document.createElement("script");o.src=t,o.onload=e,o.onerror=n,document.body.appendChild(o)}))),require.config({paths:{vs:`${e}/vs`}}),window.MonacoEnvironment={getWorkerUrl:function(t,n){return`data:text/javascript;charset=utf-8,${encodeURIComponent(`\n        self.MonacoEnvironment = {\n          baseUrl: '${e}'\n        };\n        importScripts('${e}/vs/base/worker/workerMain.js');`)}`}},await(n=["vs/editor/editor.main"],new Promise((e=>require(n,e)))),window.monaco}().then((e=>{const a=e.editor.create(document.getElementById("editor"),{value:r,language:t.value,...c?{theme:c}:null});t.disabled=!1,n.disabled=!1,n.value=c||n.value,o.disabled=!1,t.addEventListener("change",(()=>{e.editor.setModelLanguage(a.getModel(),t.value)})),n.addEventListener("change",(()=>{e.editor.setTheme(n.value),s({type:"editor.theme",theme:n.value})})),o.addEventListener("click",(()=>{s({type:"editor.insert",value:a.getValue(),syntax:t.value})})),window._editor=a})),window.parent===window&&function(){const e=document.getElementById("code");fetch("./dist/bookmarklet.js").then((e=>e.text())).then((t=>{e.textContent=`javascript:(function(){${encodeURIComponent(t)}})()`,document.body.classList.add("show-sections")})).catch(console.error)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9tb25hY28uanMiLCJ3ZWJwYWNrOi8vLy4vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vdXRpbC5qcyJdLCJuYW1lcyI6WyJDRE5fQkFTRSIsImxhbmd1YWdlU2VsZWN0IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInRoZW1lU2VsZWN0IiwiaW5zZXJ0QnV0dG9uIiwiY2xvc2VCdXR0b24iLCJwYXJhbXMiLCJVUkxTZWFyY2hQYXJhbXMiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInNlYXJjaCIsImRlY29kZVVSSUNvbXBvbmVudCIsImdldCIsIm9yaWdpbiIsInRoZW1lIiwicG9zdE1lc3NhZ2UiLCJkYXRhIiwicGFyZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsInR5cGUiLCJib2R5IiwiZXZlbnQiLCJ0YXJnZXQiLCJjdXJyZW50VGFyZ2V0IiwiY2xpY2siLCJhc3luYyIsInNyYyIsImRlcHMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInNjcmlwdCIsImNyZWF0ZUVsZW1lbnQiLCJvbmxvYWQiLCJvbmVycm9yIiwiYXBwZW5kQ2hpbGQiLCJyZXF1aXJlIiwiY29uZmlnIiwicGF0aHMiLCJ2cyIsIk1vbmFjb0Vudmlyb25tZW50IiwiZ2V0V29ya2VyVXJsIiwid29ya2VySWQiLCJsYWJlbCIsImVuY29kZVVSSUNvbXBvbmVudCIsIm1vbmFjbyIsImluaXRNb25hY28iLCJ0aGVuIiwiZWRpdG9yIiwiY3JlYXRlIiwidmFsdWUiLCJsYW5ndWFnZSIsImRpc2FibGVkIiwic2V0TW9kZWxMYW5ndWFnZSIsImdldE1vZGVsIiwic2V0VGhlbWUiLCJnZXRWYWx1ZSIsInN5bnRheCIsIl9lZGl0b3IiLCJjb2RlIiwiZmV0Y2giLCJyZXMiLCJ0ZXh0IiwidGV4dENvbnRlbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJjYXRjaCIsImNvbnNvbGUiLCJlcnJvciIsInNob3dJbnN0cnVjdGlvbnMiXSwibWFwcGluZ3MiOiJtQkFFQSxNQUFNQSxFQUFXLGtFQ0FYQyxFQUFpQkMsU0FBU0MsZUFBZSxZQUN6Q0MsRUFBY0YsU0FBU0MsZUFBZSxTQUN0Q0UsRUFBZUgsU0FBU0MsZUFBZSxVQUN2Q0csRUFBY0osU0FBU0MsZUFBZSxTQUN0Q0ksRUFBUyxJQUFJQyxnQkFBZ0JDLE9BQU9DLFNBQVNDLFFBQzdDLEVBQU9DLG1CQUFtQkwsRUFBT00sSUFBSSxTQUFXLElBQ2hEQyxFQUFTUCxFQUFPTSxJQUFJLFdBQWEsSUFDakNFLEVBQVFSLEVBQU9NLElBQUksU0FjekIsU0FBU0csRUFBYUMsR0FDcEJSLE9BQU9TLE9BQU9GLFlBQVlDLEVBQU1ILEdBR2xDUixFQUFZYSxpQkFBaUIsU0FBUyxLQUNwQ0gsRUFBWSxDQUFFSSxLQUFNLG9CQUd0QmxCLFNBQVNtQixLQUFLRixpQkFBaUIsU0FBU0csSUFDbENBLEVBQU1DLFNBQVdELEVBQU1FLGVBQ3pCbEIsRUFBWW1CLFdEN0JUQyxpQkVKQSxJQUFxQkMsRUFXRUMsRUZTNUIsYUVwQjBCRCxFRktULEdBQUczQixxQkVKYixJQUFJNkIsU0FBUSxDQUFDQyxFQUFTQyxLQUMzQixNQUFNQyxFQUFTOUIsU0FBUytCLGNBQWMsVUFFdENELEVBQU9MLElBQU1BLEVBQ2JLLEVBQU9FLE9BQVNKLEVBQ2hCRSxFQUFPRyxRQUFVSixFQUNqQjdCLFNBQVNtQixLQUFLZSxZQUFZSixPRkQ1QkssUUFBUUMsT0FBTyxDQUFFQyxNQUFPLENBQUVDLEdBQUksR0FBR3hDLFVBRWpDUyxPQUFPZ0Msa0JBQW9CLENBQ3pCQyxhQUFjLFNBQVVDLEVBQVVDLEdBQ2hDLE1BQU8sc0NBQXNDQyxtQkFBbUIsNkRBRWhEN0MsMENBRUdBLCtDRUhLNEIsRUZRVCxDQUFDLHlCRVBiLElBQUlDLFNBQVFDLEdBQVdPLFFBQVFULEVBQU1FLE1GUXJDckIsT0FBT3FDLE9DaUJoQkMsR0FBYUMsTUFBS0YsSUFDaEIsTUFBTUcsRUFBU0gsRUFBT0csT0FBT0MsT0FBT2hELFNBQVNDLGVBQWUsVUFBVyxDQUNyRWdELE1BQU8sRUFDUEMsU0FBVW5ELEVBQWVrRCxTQUN0QnBDLEVBQVEsQ0FBRUEsU0FBVSxPQUd6QmQsRUFBZW9ELFVBQVcsRUFDMUJqRCxFQUFZaUQsVUFBVyxFQUN2QmpELEVBQVkrQyxNQUFRcEMsR0FBU1gsRUFBWStDLE1BQ3pDOUMsRUFBYWdELFVBQVcsRUFFeEJwRCxFQUFla0IsaUJBQWlCLFVBQVUsS0FDeEMyQixFQUFPRyxPQUFPSyxpQkFDWkwsRUFBT00sV0FDUHRELEVBQWVrRCxVQUluQi9DLEVBQVllLGlCQUFpQixVQUFVLEtBQ3JDMkIsRUFBT0csT0FBT08sU0FBU3BELEVBQVkrQyxPQUVuQ25DLEVBQVksQ0FDVkksS0FBTSxlQUNOTCxNQUFPWCxFQUFZK0MsV0FJdkI5QyxFQUFhYyxpQkFBaUIsU0FBUyxLQUNyQ0gsRUFBWSxDQUNWSSxLQUFNLGdCQUNOK0IsTUFBT0YsRUFBT1EsV0FDZEMsT0FBUXpELEVBQWVrRCxXQUkzQjFDLE9BQU9rRCxRQUFVVixLQUdmeEMsT0FBT1MsU0FBV1QsUUFqRXRCLFdBQ0UsTUFBTW1ELEVBQU8xRCxTQUFTQyxlQUFlLFFBRXJDMEQsTUFBTSx5QkFDSGIsTUFBS2MsR0FBT0EsRUFBSUMsU0FDaEJmLE1BQUtlLElBQ0pILEVBQUtJLFlBQWMsMEJBQTBCbkIsbUJBQW1Ca0IsU0FDaEU3RCxTQUFTbUIsS0FBSzRDLFVBQVVDLElBQUksb0JBRTdCQyxNQUFNQyxRQUFRQyxPQXlEakJDLEkiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxvYWRTY3JpcHQsIGFzeW5jUmVxdWlyZSB9IGZyb20gJy4vdXRpbCdcblxuY29uc3QgQ0ROX0JBU0UgPSAnaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvbW9uYWNvLWVkaXRvci8wLjIxLjIvbWluJ1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaW5pdE1vbmFjbyAoKSB7XG4gIGF3YWl0IGxvYWRTY3JpcHQoYCR7Q0ROX0JBU0V9L3ZzL2xvYWRlci5taW4uanNgKVxuICByZXF1aXJlLmNvbmZpZyh7IHBhdGhzOiB7IHZzOiBgJHtDRE5fQkFTRX0vdnNgIH0gfSlcblxuICB3aW5kb3cuTW9uYWNvRW52aXJvbm1lbnQgPSB7XG4gICAgZ2V0V29ya2VyVXJsOiBmdW5jdGlvbiAod29ya2VySWQsIGxhYmVsKSB7XG4gICAgICByZXR1cm4gYGRhdGE6dGV4dC9qYXZhc2NyaXB0O2NoYXJzZXQ9dXRmLTgsJHtlbmNvZGVVUklDb21wb25lbnQoYFxuICAgICAgICBzZWxmLk1vbmFjb0Vudmlyb25tZW50ID0ge1xuICAgICAgICAgIGJhc2VVcmw6ICcke0NETl9CQVNFfSdcbiAgICAgICAgfTtcbiAgICAgICAgaW1wb3J0U2NyaXB0cygnJHtDRE5fQkFTRX0vdnMvYmFzZS93b3JrZXIvd29ya2VyTWFpbi5qcycpO2BcbiAgICAgICl9YFxuICAgIH1cbiAgfVxuXG4gIGF3YWl0IGFzeW5jUmVxdWlyZShbJ3ZzL2VkaXRvci9lZGl0b3IubWFpbiddKVxuICByZXR1cm4gd2luZG93Lm1vbmFjb1xufVxuIiwiaW1wb3J0IHsgaW5pdE1vbmFjbyB9IGZyb20gJy4vbW9uYWNvJ1xuXG5jb25zdCBsYW5ndWFnZVNlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsYW5ndWFnZScpXG5jb25zdCB0aGVtZVNlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0aGVtZScpXG5jb25zdCBpbnNlcnRCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW5zZXJ0JylcbmNvbnN0IGNsb3NlQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nsb3NlJylcbmNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMod2luZG93LmxvY2F0aW9uLnNlYXJjaClcbmNvbnN0IHRleHQgPSBkZWNvZGVVUklDb21wb25lbnQocGFyYW1zLmdldCgndGV4dCcpIHx8ICcnKVxuY29uc3Qgb3JpZ2luID0gcGFyYW1zLmdldCgnb3JpZ2luJykgfHwgJyonXG5jb25zdCB0aGVtZSA9IHBhcmFtcy5nZXQoJ3RoZW1lJylcblxuZnVuY3Rpb24gc2hvd0luc3RydWN0aW9ucyAoKSB7XG4gIGNvbnN0IGNvZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29kZScpXG5cbiAgZmV0Y2goJy4vZGlzdC9ib29rbWFya2xldC5qcycpXG4gICAgLnRoZW4ocmVzID0+IHJlcy50ZXh0KCkpXG4gICAgLnRoZW4odGV4dCA9PiB7XG4gICAgICBjb2RlLnRleHRDb250ZW50ID0gYGphdmFzY3JpcHQ6KGZ1bmN0aW9uKCl7JHtlbmNvZGVVUklDb21wb25lbnQodGV4dCl9fSkoKWBcbiAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZCgnc2hvdy1zZWN0aW9ucycpXG4gICAgfSlcbiAgICAuY2F0Y2goY29uc29sZS5lcnJvcilcbn1cblxuZnVuY3Rpb24gcG9zdE1lc3NhZ2UgKGRhdGEpIHtcbiAgd2luZG93LnBhcmVudC5wb3N0TWVzc2FnZShkYXRhLCBvcmlnaW4pXG59XG5cbmNsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICBwb3N0TWVzc2FnZSh7IHR5cGU6ICdlZGl0b3IuY2xvc2UnIH0pXG59KVxuXG5kb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZXZlbnQgPT4ge1xuICBpZiAoZXZlbnQudGFyZ2V0ID09PSBldmVudC5jdXJyZW50VGFyZ2V0KSB7XG4gICAgY2xvc2VCdXR0b24uY2xpY2soKVxuICB9XG59KVxuXG5pbml0TW9uYWNvKCkudGhlbihtb25hY28gPT4ge1xuICBjb25zdCBlZGl0b3IgPSBtb25hY28uZWRpdG9yLmNyZWF0ZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZWRpdG9yJyksIHtcbiAgICB2YWx1ZTogdGV4dCxcbiAgICBsYW5ndWFnZTogbGFuZ3VhZ2VTZWxlY3QudmFsdWUsXG4gICAgLi4udGhlbWUgPyB7IHRoZW1lIH0gOiBudWxsXG4gIH0pXG5cbiAgbGFuZ3VhZ2VTZWxlY3QuZGlzYWJsZWQgPSBmYWxzZVxuICB0aGVtZVNlbGVjdC5kaXNhYmxlZCA9IGZhbHNlXG4gIHRoZW1lU2VsZWN0LnZhbHVlID0gdGhlbWUgfHwgdGhlbWVTZWxlY3QudmFsdWVcbiAgaW5zZXJ0QnV0dG9uLmRpc2FibGVkID0gZmFsc2VcblxuICBsYW5ndWFnZVNlbGVjdC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiB7XG4gICAgbW9uYWNvLmVkaXRvci5zZXRNb2RlbExhbmd1YWdlKFxuICAgICAgZWRpdG9yLmdldE1vZGVsKCksXG4gICAgICBsYW5ndWFnZVNlbGVjdC52YWx1ZVxuICAgIClcbiAgfSlcblxuICB0aGVtZVNlbGVjdC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiB7XG4gICAgbW9uYWNvLmVkaXRvci5zZXRUaGVtZSh0aGVtZVNlbGVjdC52YWx1ZSlcblxuICAgIHBvc3RNZXNzYWdlKHtcbiAgICAgIHR5cGU6ICdlZGl0b3IudGhlbWUnLFxuICAgICAgdGhlbWU6IHRoZW1lU2VsZWN0LnZhbHVlXG4gICAgfSlcbiAgfSlcblxuICBpbnNlcnRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgcG9zdE1lc3NhZ2Uoe1xuICAgICAgdHlwZTogJ2VkaXRvci5pbnNlcnQnLFxuICAgICAgdmFsdWU6IGVkaXRvci5nZXRWYWx1ZSgpLFxuICAgICAgc3ludGF4OiBsYW5ndWFnZVNlbGVjdC52YWx1ZVxuICAgIH0pXG4gIH0pXG5cbiAgd2luZG93Ll9lZGl0b3IgPSBlZGl0b3Jcbn0pXG5cbmlmICh3aW5kb3cucGFyZW50ID09PSB3aW5kb3cpIHtcbiAgc2hvd0luc3RydWN0aW9ucygpXG59XG4iLCJleHBvcnQgZnVuY3Rpb24gbG9hZFNjcmlwdCAoc3JjKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgY29uc3Qgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0JylcblxuICAgIHNjcmlwdC5zcmMgPSBzcmNcbiAgICBzY3JpcHQub25sb2FkID0gcmVzb2x2ZVxuICAgIHNjcmlwdC5vbmVycm9yID0gcmVqZWN0XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzY3JpcHQpXG4gIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3luY1JlcXVpcmUgKGRlcHMpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gcmVxdWlyZShkZXBzLCByZXNvbHZlKSlcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=